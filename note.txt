Table Relationship
1. one-to-one Relationship
user_table:profile_table
2. one-to-many Relationship
profile_table:transaction_table
3. many-to-many Relationship
profile_table:order_table:transaction_table


User Table
User_Id (primary key)	Fullname	Email	Password 
1	Ade Ola	ola@gmail.com
123
2	Dami Dami	dami@gmail.com
234

Profile Table
Profile_Id (primary key)	Gender 	Address 	Phone 	User_id(Foreign Key)
1	M	Osogbo	2345	2
				


Transaction Table
Transaction_id	Type	Amount 	Profile_id (Foreign key)
1	Credit	2456	1
2	Debit	1223	1


Order table 
Order_Id	Product	Transaction_id	Profile_id
1	ewa	    2	1
2	rice	2	1




SQL sub languages

1. DDL -> Data Definition Language
e.g:
    i. CREATE DATABASE phpclass_db;
    ii. DROP DATABASE phpclass_db;
    iii. DROP TABLE blog;
    iv. CREATE TABLE blog_table(
            id INT(4) PRIMARY KEY AUTO_INCREMENT, 
            title VARCHAR(255),
            category VARCHAR(100),
            author VARCHAR(100),
            content TEXT,
            date_created DATETIME DEFAULT CURRENT_TIMESTAMP
        );
    v. TRUNCATE blog_table;
    vi. a. ALTER TABLE blog_table CHANGE author creator VARCHAR(50);
        b. ALTER TABLE blog_table RENAME TO blog;
        c. ALTER TABLE blog ADD likes INT;
        d. ALTER TABLE blog DROP COLUMN likes;

2. DML => Data Manipulation language
    i. INSERT INTO blog_table (title, author, category, content) VALUES('Blog 1', 'author 1', 'category 1', 'content 1');
    ii. UPDATE blog_table SET content = 'Very demure', author = 'Mr Abiodun' WHERE id = 2;
    iii. DELETE FROM `blog_table` WHERE id = 1;

3. DQL => Data Query Language
    i. SELECT * FROM blog_table;
    ii. SELECT title, author FROM `blog`;
    iii. SELECT * FROM `blog` WHERE id = 6;
    iv. SELECT * FROM `blog` WHERE author = 'emmanuel' and id = 6;